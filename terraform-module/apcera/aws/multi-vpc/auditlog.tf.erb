<%
  config = {}
  eval File.read("./vpc-layout.rb")
  cluster_name = config[:cluster_name]
  VPC_list = config[:VPC_list]
  extra_tags = config[:extra_tags]
%>

variable "auditlog_device" {
  default = "/dev/xvdr"
}

variable "auditlog_volume_size" {
  default = 100
}

variable "aws_auditlog_instance_type" {
  default = "m3.medium"
}

<%
  VPC_list.each_with_index do |vpc, index|
  next unless vpc[:role] == 'control-plane'
%>
# Scaling design choice: hard code two servers, on the primary and secondary subnets
resource "aws_ebs_volume" "<%= vpc[:name] %>-auditlog-primary" {
  provider = "aws.<%= vpc[:name] %>"
  tags = {
    Name = "${var.cluster_name}-auditlog-primary"
<%= extra_tags %>
  }
  availability_zone = "${var.<%= vpc[:name] %>_aws_region}${var.<%= vpc[:name] %>_az_primary}"
  size = "${var.auditlog_volume_size}"
  type = "standard"
}

resource "aws_ebs_volume" "<%= vpc[:name] %>-auditlog-secondary" {
  provider = "aws.<%= vpc[:name] %>"
  tags = {
    Name = "${var.cluster_name}-<%= vpc[:name] %>-auditlog-secondary"
<%= extra_tags %>
  }
  availability_zone = "${var.<%= vpc[:name] %>_aws_region}${var.<%= vpc[:name] %>_az_secondary}"
  size = "${var.auditlog_volume_size}"
  type = "standard"
}

resource "aws_instance" "<%= vpc[:name] %>-auditlog-primary" {
  provider = "aws.<%= vpc[:name] %>"
  tags = {
    Name = "${var.cluster_name}-<%= vpc[:name] %>-auditlog-primary"
    ClusterName = "${var.cluster_name}"
<%= extra_tags %>
  } 

  instance_type = "${var.aws_auditlog_instance_type}"

  # EBS Volume is in primary AZ, force the instance there
  availability_zone = "${var.<%= vpc[:name] %>_aws_region}${var.<%= vpc[:name] %>_az_primary}"

  ami = "${var.<%= vpc[:name] %>_aws_base_ami}"

  key_name = "${var.<%= vpc[:name] %>_aws_ssh_key}"

  vpc_security_group_ids = ["${aws_security_group.<%= vpc[:name] %>-default.id}"]
  associate_public_ip_address = true
  subnet_id = "${aws_subnet.<%= vpc[:name] %>-primary.id}"

  user_data = "${var.aws_user_data}"
}

resource "aws_volume_attachment" "<%= vpc[:name] %>-auditlog-primary" {
  provider = "aws.<%= vpc[:name] %>"
  device_name = "${var.auditlog_device}"
  instance_id = "${aws_instance.<%= vpc[:name] %>-auditlog-primary.id}"
  volume_id = "${aws_ebs_volume.<%= vpc[:name] %>-auditlog-primary.id}"
}

resource "aws_instance" "<%= vpc[:name] %>-auditlog-secondary" {
  provider = "aws.<%= vpc[:name] %>"
  tags = {
    Name = "${var.cluster_name}-<%= vpc[:name] %>-auditlog-secondary"
    ClusterName = "${var.cluster_name}"
<%= extra_tags %>
  } 

  instance_type = "${var.aws_auditlog_instance_type}"

  # EBS Volume is in secondary AZ, force the instance there
  availability_zone = "${var.<%= vpc[:name] %>_aws_region}${var.<%= vpc[:name] %>_az_secondary}"

  ami = "${var.<%= vpc[:name] %>_aws_base_ami}"

  key_name = "${var.<%= vpc[:name] %>_aws_ssh_key}"

  vpc_security_group_ids = ["${aws_security_group.<%= vpc[:name] %>-default.id}"]
  associate_public_ip_address = true
  subnet_id = "${aws_subnet.<%= vpc[:name] %>-secondary.id}"

  user_data = "${var.aws_user_data}"
}

resource "aws_volume_attachment" "<%= vpc[:name] %>-auditlog-secondary" {
  provider = "aws.<%= vpc[:name] %>"
  device_name = "${var.auditlog_device}"
  instance_id = "${aws_instance.<%= vpc[:name] %>-auditlog-secondary.id}"
  volume_id = "${aws_ebs_volume.<%= vpc[:name] %>-auditlog-secondary.id}"
}

output "auditlog-device" {
  value = "${var.auditlog_device}"
}
output "auditlog-addresses" {
  value = "'${aws_instance.<%= vpc[:name] %>-auditlog-primary.private_ip}', '${aws_instance.<%= vpc[:name] %>-auditlog-secondary.private_ip}'"
}
<% end %>
